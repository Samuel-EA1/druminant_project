// import Header2 from "@/components/header2";
import { userState } from "@/atom";
import { Footer } from "@/components/footer";
import ModuleHeader from "@/components/moduleheader";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import { AiOutlineDollarCircle, AiOutlineLoading, AiOutlineLoading3Quarters } from "react-icons/ai";
import { MdEventAvailable } from "react-icons/md";
import { ToastContainer, toast } from "react-toastify";
import { useRecoilState, useRecoilValue } from "recoil";
import { GiCage, GiCow, GiGoat, GiPig, GiSheep } from "react-icons/gi";
import { TbMilk } from "react-icons/tb";
import { FaCow } from "react-icons/fa6";
import { BsCalendar2Date } from "react-icons/bs";
import axios from "axios";
import { jwtDecode } from "jwt-decode";

export default function Staff() {
  const [hamburgerState, setHamburgerState] = useState(false);
  const [decodedData, setDecodedData] = useState({
    isAdmin: "",
    status: "",
    farmland: "",
  });
  const [livestockCount, setLiveStockCount] = useState([]);
  const [eventCount, setEventCount] = useState([]);
  const [pregnancyCount, setPregnancyCount] = useState([]);
  const [lactationCount, setLactationCount] = useState([]);
  const [quarantineCount, setQuarantineCount] = useState([]);
  const [expenseCount, setExpenseCount] = useState([]);
  const [incomeCount, setIncomeCount] = useState([]);
  // render the quarantine modulebased on the role of user
  const userData = useRecoilValue(userState);

  useEffect(() => {
    toast("Welcome!");
  }, []);
  const livestockNames = ["cattle", "goat", "pig", "sheep"];

  useEffect(() => {
    if (userData?.token) {
      const fetchData = async (type, financeType = "") => {
        const resultsArray = [];

        const results = await Promise.allSettled(
          livestockNames.map(async (livestockName) => {
            try {
              const response = await axios.get(
                `https://druminant-seven.vercel.app/api/v1/farmland/${userData.farmland}/${type}/${livestockName}/${financeType}`,
                {
                  headers: {
                    Authorization: `Bearer ${userData.token}`,
                  },
                }
              );
              return {
                name: livestockName,
                data: response.data.message.length,
              };
            } catch (error) {
              console.error(`Error fetching data for ${livestockName}`, error);
              if (error.response && error.response.status === 400) {
                toast.error(error.response.data.message);
              }
              return { name: livestockName, data: null };
            }
          })
        );

        results.forEach((result) => {
          if (result.status === "fulfilled") {
            resultsArray.push(result.value);
          } else {
            console.error(`Request failed: ${result.reason}`);
          }
        });

        return resultsArray;
      };

      // IIFE to fetch data
      (async () => {
        const livestockCountArray = await fetchData("livestock");
        const eventCountArray = await fetchData("event");
        const pregnancyTrackerArray = await fetchData("pregnancy");
        const lactationArray = await fetchData("pregnancy");
        const quarantineArray = await fetchData("quarantine");
        const incomeArray = await fetchData("finance", "income");
        const expenseArray = await fetchData("finance", "expense");

        setExpenseCount(expenseArray);
        setLiveStockCount(livestockCountArray);
        setIncomeCount(incomeArray);
        setQuarantineCount(quarantineArray);
        setLactationCount(lactationArray);
        setPregnancyCount(pregnancyTrackerArray);
        setEventCount(eventCountArray);
      })();

      // Additional axios request
      axios
        .get(
          `https://druminant-seven.vercel.app/api/v1/farmland/${userData.farmland}`,
          {
            headers: {
              Authorization: `Bearer ${userData?.token}`,
            },
          }
        )
        .then((response) => {
          console.log("Protected data:", response.data);
        })
        .catch((error) => {
          console.error("Error fetching farmland data", error);
          if (error.response && error.response.status === 400) {
            toast.error(error.response.data.message);
          }
        });
    }
  }, [userData?.token]);

  return (
    <div>
      <Head>
        <title>Druminant - Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="/image/mobilelogo.png"
        />
      </Head>
      <div className="dashboard-main  mx-auto">
        <ModuleHeader />
        {userData?.token ? (
          userData.status === "Accept" || userData?.isAdmin ? (
            <div>
              {eventCount.length   ? (
                <>
                  {" "}
                  <div className="dashboard md:mt-0">
                    <p className="first-letter:capitalize md:mt-16 mt-3">
                      {userData.farmland}
                      <br className="break" /> Dashboard
                    </p>
                  </div>
                  <div className=" my-20 max-w-7xl  mx-auto    md:flex flex-wrap items-center justify-center border border-transparent  text-gray-800">
                    {" "}
                    {/* livestock */}
                    <div className="p-2 basis-80 lg:basis-96 md:m-5  ">
                      <Link href={`/dashboard/livestock`}>
                        <div className="bg-gray-200 w-full p-3   rounded-md  max-w-md lg:max-w-sm mx-auto transform duration-1000 hover:scale-[1.02] hover:animate-pulse ">
                          <div className="flex items-center">
                            {/* <FaCow style={{ fontSize: "25px", marginTop: "10px", marginLeft: "5px", color: "#030025" }} /> */}
                            <h1 className="font-bold text-lg mb-2">
                              Livestock Profile
                            </h1>
                          </div>

                          <div className="flex items-center justify-between">
                            <div>
                              <div className="flex items-center   space-x-2">
                                <GiCow className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Cattle:{" "}
                                  {livestockCount.length ? (
                                    <strong>
                                      {
                                        livestockCount.find(
                                          (e) => e.name === "cattle"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiGoat className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Goat:{" "}
                                  {livestockCount.length ? (
                                    <strong>
                                      {
                                        livestockCount.find(
                                          (e) => e.name === "goat"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiPig className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />

                                <p className="font-semibold">
                                  {" "}
                                  Pig:{" "}
                                  {livestockCount.length ? (
                                    <strong>
                                      {
                                        livestockCount.find(
                                          (e) => e.name === "pig"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiSheep className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  {" "}
                                  Sheep:{" "}
                                  {livestockCount.length ? (
                                    <strong>
                                      {
                                        livestockCount.find(
                                          (e) => e.name === "sheep"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>
                            </div>

                            <div className="relative  h-16 w-16 md:h-20 md:w-20">
                              <Image
                                alt=""
                                className="rounded-full  absolute top-0  bottom-0 right-0 left-0"
                                src={"/image/sheep.jpg"}
                                fill="true"
                              />
                            </div>
                          </div>
                        </div>
                      </Link>
                    </div>
                    {/* income and expense */}
                    <div className="p-2 basis-80 lg:basis-96 md:m-5  ">
                      <Link href={`/dashboard/livestock`}>
                        <div className="bg-gray-200 w-full p-3   rounded-md  max-w-md lg:max-w-sm mx-auto transform duration-1000 hover:scale-105 hover:animate-pulse ">
                          <div className="flex items-center">
                            {/* <FaCow style={{ fontSize: "25px", marginTop: "10px", marginLeft: "5px", color: "#030025" }} /> */}
                            <h1 className="font-bold text-lg mb-2">
                              Income/Expense
                            </h1>
                          </div>

                          <div className="flex items-center justify-between">
                            <div>
                              <div className="flex items-center   space-x-2">
                                <GiCow className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Cattle:{" "}
                                  {incomeCount.length ? (
                                    <strong>
                                      {
                                        incomeCount.find(
                                          (e) => e.name === "cattle"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                  /
                                  {expenseCount.length ? (
                                    <strong>
                                      {
                                        expenseCount.find(
                                          (e) => e.name === "cattle"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiGoat className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Goat:{" "}
                                  {incomeCount.length ? (
                                    <strong>
                                      {
                                        incomeCount.find(
                                          (e) => e.name === "goat"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                  /
                                  {expenseCount.length ? (
                                    <strong>
                                      {
                                        expenseCount.find(
                                          (e) => e.name === "goat"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiPig className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />

                                <p className="font-semibold">
                                  {" "}
                                  Pig:{" "}
                                  {incomeCount.length ? (
                                    <strong>
                                      {
                                        incomeCount.find(
                                          (e) => e.name === "pig"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                  /
                                  {expenseCount.length ? (
                                    <strong>
                                      {
                                        expenseCount.find(
                                          (e) => e.name === "pig"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiSheep className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  {" "}
                                  Sheep:{" "}
                                  {incomeCount.length ? (
                                    <strong>
                                      {
                                        incomeCount.find(
                                          (e) => e.name === "sheep"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                  /
                                  {expenseCount.length ? (
                                    <strong>
                                      {
                                        expenseCount.find(
                                          (e) => e.name === "sheep"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>
                            </div>
                            <div className="relative  h-16 w-16 md:h-20 md:w-20">
                              <Image
                                alt=""
                                className="rounded-full  absolute top-0  bottom-0 right-0 left-0"
                                src={"/image/finance.jpg"}
                                fill="true"
                              />
                            </div>
                          </div>
                        </div>
                      </Link>
                    </div>
                    {/* envent tracker */}
                    <div className="p-2 basis-80 lg:basis-96 md:m-5  ">
                      <Link href={`/dashboard/livestock`}>
                        <div className="bg-gray-200 w-full p-3   rounded-md  max-w-md lg:max-w-sm mx-auto transform duration-1000 hover:scale-105 hover:animate-pulse ">
                          <div className="flex items-center">
                            {/* <FaCow style={{ fontSize: "25px", marginTop: "10px", marginLeft: "5px", color: "#030025" }} /> */}
                            <h1 className="font-bold text-lg mb-2">
                              Event Tracker
                            </h1>
                          </div>

                          <div className="flex items-center justify-between">
                            <div>
                              <div className="flex items-center   space-x-2">
                                <GiCow className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Cattle:{" "}
                                  {eventCount.length ? (
                                    <strong>
                                      {
                                        eventCount.find(
                                          (e) => e.name === "cattle"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiGoat className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Goat:{" "}
                                  {eventCount.length ? (
                                    <strong>
                                      {
                                        eventCount.find(
                                          (e) => e.name === "goat"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiPig className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />

                                <p className="font-semibold">
                                  {" "}
                                  Pig:{" "}
                                  {eventCount.length ? (
                                    <strong>
                                      {
                                        eventCount.find((e) => e.name === "pig")
                                          ?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiSheep className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  {" "}
                                  Sheep:{" "}
                                  {eventCount.length ? (
                                    <strong>
                                      {
                                        eventCount.find(
                                          (e) => e.name === "sheep"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>
                            </div>
                            <div className="relative  h-16 w-16 md:h-20 md:w-20">
                              <Image
                                alt=""
                                className="rounded-full  absolute top-0  bottom-0 right-0 left-0"
                                src={"/image/clock.jpg"}
                                fill="true"
                              />
                            </div>
                          </div>
                        </div>
                      </Link>
                    </div>
                    <div className="p-2 basis-80 lg:basis-96 md:m-5  ">
                      <Link href={`/dashboard/livestock`}>
                        <div className="bg-gray-200 w-full p-3   rounded-md  max-w-md lg:max-w-sm mx-auto transform duration-1000 hover:scale-105 hover:animate-pulse ">
                          <div className="flex items-center">
                            {/* <FaCow style={{ fontSize: "25px", marginTop: "10px", marginLeft: "5px", color: "#030025" }} /> */}
                            <h1 className="font-bold text-lg mb-2">
                              Pregnancy Tracker
                            </h1>
                          </div>

                          <div className="flex items-center justify-between">
                            <div>
                              <div className="flex items-center   space-x-2">
                                <GiCow className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Cattle:{" "}
                                  {pregnancyCount.length ? (
                                    <strong>
                                      {
                                        pregnancyCount.find(
                                          (e) => e.name === "cattle"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiGoat className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Goat:{" "}
                                  {pregnancyCount.length ? (
                                    <strong>
                                      {
                                        pregnancyCount.find(
                                          (e) => e.name === "goat"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiPig className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />

                                <p className="font-semibold">
                                  {" "}
                                  Pig:{" "}
                                  {pregnancyCount.length ? (
                                    <strong>
                                      {
                                        pregnancyCount.find(
                                          (e) => e.name === "pig"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiSheep className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  {" "}
                                  Sheep:{" "}
                                  {pregnancyCount.length ? (
                                    <strong>
                                      {
                                        pregnancyCount.find(
                                          (e) => e.name === "sheep"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>
                            </div>
                            <div className="relative  h-16 w-16 md:h-20 md:w-20">
                              <Image
                                alt=""
                                className="rounded-full  absolute top-0  bottom-0 right-0 left-0"
                                src={"/image/pregnant.png"}
                                fill="true"
                              />
                            </div>
                          </div>
                        </div>
                      </Link>
                    </div>
                    {/* lactation */}
                    <div className="p-2 basis-80 lg:basis-96 md:m-5  ">
                      <Link href={`/dashboard/lactation`}>
                        <div className="bg-gray-200 w-full p-3   rounded-md  max-w-md lg:max-w-sm mx-auto transform duration-1000 hover:scale-105 hover:animate-pulse ">
                          <div className="flex items-center">
                            {/* <FaCow style={{ fontSize: "25px", marginTop: "10px", marginLeft: "5px", color: "#030025" }} /> */}
                            <h1 className="font-bold text-lg mb-2">
                              Lactation Tracker
                            </h1>
                          </div>

                          <div className="flex items-center justify-between">
                            <div>
                              <div className="flex items-center   space-x-2">
                                <GiCow className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Cattle:{" "}
                                  {lactationCount.length ? (
                                    <strong>
                                      {
                                        lactationCount.find(
                                          (e) => e.name === "cattle"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiGoat className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Goat:{" "}
                                  {lactationCount.length ? (
                                    <strong>
                                      {
                                        lactationCount.find(
                                          (e) => e.name === "goat"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiPig className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />

                                <p className="font-semibold">
                                  {" "}
                                  Pig:{" "}
                                  {lactationCount.length ? (
                                    <strong>
                                      {
                                        lactationCount.find(
                                          (e) => e.name === "pig"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiSheep className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  {" "}
                                  Sheep:{" "}
                                  {lactationCount.length ? (
                                    <strong>
                                      {
                                        lactationCount.find(
                                          (e) => e.name === "sheep"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>
                            </div>
                            <div className="relative  h-16 w-16 md:h-20 md:w-20">
                              <Image
                                alt=""
                                className="rounded-full  absolute top-0  bottom-0 right-0 left-0"
                                src={"/image/lactation2.jpg"}
                                fill="true"
                              />
                            </div>
                          </div>
                        </div>
                      </Link>
                    </div>
                    <div className="p-2 basis-80 lg:basis-96 md:m-5  ">
                      <Link href={`/dashboard/quarantine`}>
                        <div className="bg-gray-200 w-full p-3   rounded-md  max-w-md lg:max-w-sm mx-auto transform duration-1000 hover:scale-105 hover:animate-pulse ">
                          <div className="flex items-center">
                            {/* <FaCow style={{ fontSize: "25px", marginTop: "10px", marginLeft: "5px", color: "#030025" }} /> */}
                            <h1 className="font-bold text-lg mb-2">
                              Quarantine
                            </h1>
                          </div>

                          <div className="flex items-center justify-between">
                            <div>
                              <div className="flex items-center   space-x-2">
                                <GiCow className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Cattle:{" "}
                                  {quarantineCount.length ? (
                                    <strong>
                                      {
                                        quarantineCount.find(
                                          (e) => e.name === "cattle"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiGoat className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  Goat:{" "}
                                  {quarantineCount.length ? (
                                    <strong>
                                      {
                                        quarantineCount.find(
                                          (e) => e.name === "goat"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiPig className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />

                                <p className="font-semibold">
                                  {" "}
                                  Pig:{" "}
                                  {quarantineCount.length ? (
                                    <strong>
                                      {
                                        quarantineCount.find(
                                          (e) => e.name === "pig"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>

                              <div className="flex items-center   space-x-2">
                                <GiSheep className=" text-[#008000]   border-[1px] border-gray-400  rounded-full   text-xl" />
                                <p className="font-semibold">
                                  {" "}
                                  Sheep:{" "}
                                  {quarantineCount.length ? (
                                    <strong>
                                      {
                                        quarantineCount.find(
                                          (e) => e.name === "sheep"
                                        )?.data
                                      }
                                    </strong>
                                  ) : (
                                    <span className="font-extrabold text-[#008000] animate-pulse text-lg">
                                      ...
                                    </span>
                                  )}
                                </p>
                              </div>
                            </div>
                            <div className="relative  h-16 w-16 md:h-20 md:w-20">
                              <Image
                                alt=""
                                className="rounded-full  absolute top-0  bottom-0 right-0 left-0"
                                src={"/image/quaran.jpg"}
                                fill="true"
                              />
                            </div>
                          </div>
                        </div>
                      </Link>
                    </div>
                  </div>
                </>
              ) : (
                <div className="text-center text-gray-200 mx-0 h-screen flex items-center justify-center">
                  <div className="flex items-center justify-center flex-col">
                    <AiOutlineLoading3Quarters className="text-4xl  animate-spin" />
                  </div>
                </div>
              )}
            </div>
          ) : decodedData.status === "Reject" ? (
            <div className="text-center text-gray-200 mx-0 h-screen flex items-center justify-center">
              <div className="flex items-center justify-center flex-col">
                <p className="dashboard-mssg">Your request has been denied!</p>
              </div>
            </div>
          ) : (
            <div className="text-center text-gray-200 mx-0 h-screen flex items-center justify-center">
              <div className="flex items-center justify-center flex-col">
                <p className="dashboard-mssg">
                  You are not allowed to access the farmland <br />
                  Please, remind admin to accept your request
                </p>
              </div>
            </div>
          )
        ) : (
          <div className="text-center text-gray-200 mx-0 h-screen flex items-center justify-center">
            <div className="flex items-center justify-center flex-col">
              <p className="dashboard-mssg">
                You are not logged in! <br />
                Please, log in to access profile
              </p>
              <Link href={"/login"} className="mss-login">
                login
              </Link>
            </div>
          </div>
        )}
        ;
        <div className="md:mt-0 mt-20">
          <Footer />
        </div>
      </div>
    </div>
  );
}
